00 // Read from RAM addr to RegA
00 // RAM addr index 0
64 // Increment RegA by 1 (A+1)
01 // Read from RAM addr to RegB
3E // RAM addr index 62
96 // If RegA == RegB, branch to ROM addr
0B // Branched to ROM addr index 11
02 // Else, write the value in RegA to RAM addr
00 // RAM addr index 0
0B // Dereference RegA (store the value that is stored in the address held in RegA)
02 // Write the new value in RegA to RAM addr
90 // IR RAM base addr
08 // Go to the IDLE state
14 // (If RegA == RegB) Store the value of RegA-RegB in RegA
64 // Inncrement RegA by 1 (A+1)
07 // Go to ROM addr
07 // ROM addr index 7
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00